# Git branch to track for docker compose
DOCKER_CHANNEL=master

# private key of the matchmaker bot's wallet
BOT_WALLET_PRIVATEKEY="123..."

# mnemonic phrase
MNEMONIC=""

# List of RPC url(s) for interacting with evm, optionally with selection weight and track size separated by comma in form of key=value
# example: url=https://rpc1.com,weight=0.5,trackSize=100
RPC_URL="https://polygon-mainnet.g.alchemy.com/v2/{API_KEY}, https://rpc.ankr.com/polygon/{API_KEY};2.5, https://drpc.com;1.5;85"

# Option to explicitly use these rpc for write transactions, such as flashbots or mev protect rpc to protect against mev attacks.
WRITE_RPC=""

# arb contract address
ARB_ADDRESS="0x123..."

# generic arb contract address
GENERIC_ARB_ADDRESS="0x123..."

# one or more subgraph urls to read orders details from, can be used in combination with ORDERS
# for more than 1 subgraphs, seperate them by comma and a space
SUBGRAPH="https://api.thegraph.com/subgraphs/name/org1/sg1, https://api.thegraph.com/subgraphs/name/org2/sg2"

# list of liquidity providers names separated by a comma for each
LIQUIDITY_PROVIDERS="sushiswapv2,uniswapv3,quickswap"

# gas coverage percentage for each transaction to be considered profitable to be submitted
GAS_COVER="100"

# Option to filter the subgraph query results with a specific order hash
ORDER_HASH=""

# Option to filter the subgraph query results with a specific order owner address
ORDER_OWNER=""

# Seconds to wait between each arb round, default is 10
SLEEP=10

# Option to maximize maxIORatio
MAX_RATIO="true"

# Optional seconds to wait for the transaction to mine before disregarding it
TIMEOUT=""

# number of hops of binary search, if left unspecified will be 1 by default
HOPS=11

# api key for heyperDx platfomr to send spans to, if not set will send traces to localhost
HYPERDX_API_KEY=""

# trace/spans service name, defaults to "arb-bot" if not set
TRACER_SERVICE_NAME=""

# The amount of retries for the same order, max is 3, default is 1
RETRIES=1

# Option to specify time (in minutes) between pools updates, default is 0 minutes
POOL_UPDATE_INTERVAL=

# number of excess wallets for submitting txs, requires mnemonic option
WALLET_COUNT=

# topup amount for excess accounts, requires mnemonic option
TOPUP_AMOUNT=

# Minimum bot's wallet gas token balance before alering
BOT_MIN_BALANCE=

# Specifies owned order to get funded once their vault goes below the specified threshold
# example: token,vaultId,threshold,toptupamount;token,vaultId,threshold,toptupamount;...
SELF_FUND_ORDERS=

# Specifies the owner limit, in form of owner1=limit,owner2=limit,... , example: 0x123456=12,0x3456=44
OWNER_PROFILE= 

# Allows to use public RPCs as fallbacks, default is false
PUBLIC_RPC=

# Specifies the routing mode 'multi' or 'single' or 'full', default is 'single'
ROUTE="single"

# Option to multiply the gas price fetched from the rpc as percentage, default is 107, ie +7%
GAS_PRICE_MULTIPLIER=

# Option to multiply the gas limit estimation from the rpc as percentage, default is 100, ie no change
GAS_LIMIT_MULTIPLIER=

# Option to set a gas limit for all submitting txs optionally with appended percentage sign to apply as percentage to original gas
TX_GAS=

# Option to set a static gas limit for quote read calls, default is 1 milion
QUOTE_GAS=

# Only clear orders through RP4, excludes intra and inter orderbook clears
RP_ONLY="true"

# Address of dispair (ExpressionDeployer contract) to use for tasks
DISPAIR="address"

# Filters for inc/exc orders, multiple items can be separated by a comma
INCLUDE_ORDERS="0x123...,0xabc..." # Only process these specific order hashes
INCLUDE_OWNERS="0x123...,0xabc..." # Only process orders from these specific owners
INCLUDE_ORDERBOOKS="0x123...,0xabc..." # Only process orders from these specific orderbooks
EXCLUDE_ORDERS="0x123...,0xabc..." # Does NOT process these specific order hashes
EXCLUDE_OWNERS="0x123...,0xabc..." # Does NOT process orders from these specific owners
EXCLUDE_ORDERBOOKS="0x123...,0xabc..." # Does NOT process orders from these specific orderbooks


# test rpcs vars
TEST_POLYGON_RPC=
TEST_BASE_RPC=
TEST_FLARE_RPC=
TEST_ETH_RPC=
TEST_BSC_RPC=
TEST_ARBITRUM_RPC=
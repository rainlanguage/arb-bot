name: GitHub Actions Rain Solver Preview Deployment

on: [push]

concurrency:
  group: ${{ github.ref }}-deploy-preview
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  Deploy-Preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install Nix 1/2
        uses: DeterminateSystems/nix-installer-action@v4
      - name: Install Nix 2/2
        uses: DeterminateSystems/magic-nix-cache-action@v2

      - name: Prepare Sushi Lib
        run: ./prep-sushi.sh

      - name: Install Dependencies
        run: nix develop -c npm install

      - name: Build
        run: nix develop -c npm run build

      - name: Create GitHub Deployment
        id: deployment
        uses: bobheadxi/deployments@v1
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: preview
          ref: ${{ github.sha }}

      - name: Deploy Rain Solver
        run: nix develop -c node arb-bot
        env:
          IS_PREVIEW: true
          PREVIEW_RUNS: ${{ vars.PREVIEW_RUNS }}
          TRACER_SERVICE_NAME: github-preview-${{ github.sha }}
          RPC_URL: ${{ secrets.PREVIEW_RPC_URL }}
          HYPERDX_API_KEY: ${{ secrets.PREVIEW_HYPERDX_API_KEY }}
          BOT_WALLET_PRIVATEKEY: ${{ secrets.PREVIEW_BOT_WALLET_PRIVATEKEY }}
          MAX_RATIO: ${{ vars.PREVIEW_MAX_RATIO }}
          SUBGRAPH: ${{ vars.PREVIEW_SUBGRAPH }}
          LIQUIDITY_PROVIDERS: ${{ vars.PREVIEW_LIQUIDITY_PROVIDERS }}
          ARB_ADDRESS: ${{ vars.PREVIEW_ARB_ADDRESS }}
          GENERIC_ARB_ADDRESS: ${{ vars.PREVIEW_GENERIC_ARB_ADDRESS }}
          BOT_MIN_BALANCE: ${{ vars.PREVIEW_BOT_MIN_BALANCE }}
          GAS_PRICE_MULTIPLIER: ${{ vars.PREVIEW_GAS_PRICE_MULTIPLIER }}
          RP_ONLY: ${{ vars.PREVIEW_RP_ONLY }}
          TX_GAS: ${{ vars.PREVIEW_TX_GAS }}
          DISPAIR: ${{ vars.PREVIEW_DISPAIR }}

      # we need to get from/to timestamp because hyperdx by default only shows the last 15 mins logs,
      # so if a commit preview has been pushed more than 15 mins relative to when link get opened, it
      # wont show the logs unless user manually increases the timeframe from hyperdx gui, so we set
      # from/to timestamp in link query vars to avoid this, the timeframe set is for past 30 days which
      # should be more than enough for any use case
      - name: Get Date Timestamps
        run: |
          # set from(30 days ago) to(now) timestamps in envs
          FROM_TIME=$(date -d "30 days ago" +%s)
          TO_TIME=$(date +%s)

          # set in github envs as milliseconds
          echo "FROM_TIME=${FROM_TIME}000" >> $GITHUB_ENV
          echo "TO_TIME=${TO_TIME}000" >> $GITHUB_ENV

          # log the timestamps for debug purposes
          echo from timestamp: $FROM_TIME \($(date -d @$FROM_TIME)\)
          echo to timestamp: $TO_TIME \($(date -d @$TO_TIME)\)

      - name: Update Deployment Status
        uses: bobheadxi/deployments@v1
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          env: preview
          status: success
          ref: ${{ github.sha }}
          override: false
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: https://www.hyperdx.io/search?q=%28%28service%3A%22github-preview-${{ github.sha }}%22%29%29&from=${{ env.FROM_TIME }}&to=${{ env.TO_TIME }}
